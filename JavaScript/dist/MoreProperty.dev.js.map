{"version":3,"sources":["MoreProperty.js"],"names":["li","val","filter","n","console","log","arr","every","toUpperCase","some","multiply","a","b","li1","li2","length","traverse"],"mappings":";;AAAA;AACA,IAAIA,EAAE,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,CAAT;AACA,IAAMC,GAAG,GAAGD,EAAE,CAACE,MAAH,CAAU,UAAAC,CAAC,EAAI;AACvB,SAAOA,CAAC,GAAG,CAAJ,KAAU,CAAjB;AACH,CAFW,CAAZ;AAGAC,OAAO,CAACC,GAAR,CAAYJ,GAAZ,E,CAEA;;AACA,IAAIK,GAAG,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,EAAwB,UAAxB,EAAoC,KAApC,CAAV;AACAA,GAAG,CAACC,KAAJ,CAAU,UAAAJ,CAAC,EAAI;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,KAAKA,CAAC,CAACK,WAAF,EAAlB;AAEH,CAHD,E,CAKA;;AACAF,GAAG,CAACG,IAAJ,CAAS,UAAAN,CAAC,EAAI;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,KAAKA,CAAC,CAACK,WAAF,EAAlB;AACH,CAFD,E,CAIA;;AACA,SAASE,QAAT,CAAkBC,CAAlB,EAA4B;AAAA,MAAPC,CAAO,uEAAH,CAAG;AACxBR,EAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,GAAGC,CAAhB;AACH;;AACDF,QAAQ,CAAC,CAAD,CAAR,C,CAAY;;AACZA,QAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR,C,CAAe;AAEf;;AACA,IAAIG,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAV;AACA,IAAMC,GAAG,aAAOD,GAAP,GAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,EAAT;AACAT,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACC,MAAhB,E,CAAyB;AAEzB;;AACA,SAASC,QAAT,GAA0B;AAAA,oCAALH,GAAK;AAALA,IAAAA,GAAK;AAAA;;AACtB,yBAAUA,GAAV,yBAAe;AAAVV,IAAAA,CAAU;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;;AACDa,QAAQ","sourcesContent":["//Filter: It will also return a new array with particular conditions\r\nlet li = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\r\nconst val = li.filter(n => {\r\n    return n % 2 === 1;\r\n})\r\nconsole.log(val)\r\n\r\n//Every: It checks whether all the elements pass the provided function\r\nlet arr = ['dog', 'cat', 'tiger', 'ELEPHANT', 'HEN']\r\narr.every(n => {\r\n    console.log(n === n.toUpperCase())\r\n\r\n})\r\n\r\n//Some It is similar to every but it returns true if any of the condition is true\r\narr.some(n => {\r\n    console.log(n === n.toUpperCase())\r\n})\r\n\r\n// Default parameter to the function \r\nfunction multiply(a, b = 1) {\r\n    console.log(a * b)\r\n}\r\nmultiply(4) //ans=4\r\nmultiply(4, 6) //ans=24\r\n\r\n// Spread: we can use a particular array into another array, objects etc\r\nlet li1 = [1, 2, 3, 4, 5]\r\nconst li2 = [...li1, 6, 7, 8, 9, 10]\r\nconsole.log(li2.length); // here we will get that size of li2 is 10 5 element of li1 and 5 of li2\r\n\r\n//Rest: we spread particular array as argument in a functtion\r\nfunction traverse(...li1) {\r\n    for (n of li1) {\r\n        console.log(n)\r\n    }\r\n}\r\ntraverse()"],"file":"MoreProperty.dev.js"}