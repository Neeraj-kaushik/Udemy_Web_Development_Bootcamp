{"version":3,"sources":["MoreProperty.js"],"names":["li","val","filter","n","console","log","arr","multiply","b","arguments","length","undefined","a","every","toUpperCase","li1","concat","traverse","_len","Array","_key","_i","_li","li2"],"mappings":"aACA,IAAIA,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,IADzDC,IAAAD,GAAAE,OAAA,SAAAC,GACIH,OAAKG,EAAA,GAAA,IAELC,QAAAC,IAAQJ,KAKZ,IAAIK,IAAM,CAAC,MAAO,MAAO,QAAS,WAAY,OAa1CF,SAAOG,SAASC,GAAhB,IAAAA,EAAA,EAAAC,UAAAC,aAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,EACHL,QAAAC,IAAAO,EAAAJ,GAdDF,IAAIA,MAAM,SAAAH,GACNU,QAAMR,IAAAF,IAACA,EAAIW,iBAOXV,IAAAA,KAAO,SAAAD,GAGXC,QAAAC,IAAAF,IAAAA,EAAAW,iBAIAP,SAAS,GACTA,SAAS,EAAG,GAGZ,IAAIQ,IAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GAAnBA,IAAG,GAAAC,OAAGD,IAAH,CAAG,EAAA,EAAV,EAAA,EAAA,KAKA,SAASE,WAAiB,IAAA,IAAAC,EAAAT,UAAAC,OAALK,EAAK,IAAAI,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAALL,EAAKK,GAAAX,UAAAW,GAA1B,IAAA,IAAAC,EAAA,EAAAC,EAASL,EAATI,EAAAC,EAAAZ,OAAAW,IAASJ,EAATK,EAAAD,GAA0BjB,QAAAC,IAAAF,GAJ1BC,QAASC,IAAAkB,IAAAb,QASTO","file":"MoreProperty.min.js","sourcesContent":["//Filter: It will also return a new array with particular conditions\r\nlet li = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\r\nconst val = li.filter(n => {\r\n    return n % 2 === 1;\r\n})\r\nconsole.log(val)\r\n\r\n//Every: It checks whether all the elements pass the provided function\r\nlet arr = ['dog', 'cat', 'tiger', 'ELEPHANT', 'HEN']\r\narr.every(n => {\r\n    console.log(n === n.toUpperCase())\r\n\r\n})\r\n\r\n//Some It is similar to every but it returns true if any of the condition is true\r\narr.some(n => {\r\n    console.log(n === n.toUpperCase())\r\n})\r\n\r\n// Default parameter to the function \r\nfunction multiply(a, b = 1) {\r\n    console.log(a * b)\r\n}\r\nmultiply(4) //ans=4\r\nmultiply(4, 6) //ans=24\r\n\r\n// Spread: we can use a particular array into another array, objects etc\r\nlet li1 = [1, 2, 3, 4, 5]\r\nconst li2 = [...li1, 6, 7, 8, 9, 10]\r\nconsole.log(li2.length); // here we will get that size of li2 is 10 5 element of li1 and 5 of li2\r\n\r\n//Rest: we spread particular array as argument in a functtion\r\nfunction traverse(...li1) {\r\n    for (n of li1) {\r\n        console.log(n)\r\n    }\r\n}\r\ntraverse()"]}